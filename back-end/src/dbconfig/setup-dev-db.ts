/* eslint-disable @typescript-eslint/restrict-template-expressions */
import { Request, Response } from 'express';
import { discs } from '../dummy-data/discs';
import { pool } from './db-connector';

const getRandNum = (min: number, max: number) =>
  Math.random() * (max - min) + min;

const setupDevDb = async (req: Request, res: Response) => {
  const createUserTable = `
    CREATE TABLE users (
      user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      username varchar,
      email varchar,
      paypal varchar,
      password varchar,
      image_url varchar
    );
  `;

  await pool.query(createUserTable).catch((err) => {
    console.error(err);
  });

  const populateTestUsers = `
    INSERT INTO users (username, email, paypal, password)
      VALUES ('TheNathanDrake', 'nathandrakedrums@gmail.com', 'soundmanlpte@gmail.com', 'awesome'),
      ('JoeSchmoe', 'joe@deez.com', 'joe@deez.com', 'awesome')
  `;

  await pool.query(populateTestUsers).catch((err) => {
    console.error(err);
    res.end();
  });

  const createDiscTable = `
    CREATE TABLE discs (
      disc_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      title varchar,
      brand varchar,
      type varchar,
      mold varchar,
      base_plastic varchar,
      sub_plastic varchar,
      run varchar,
      condition integer,
      price integer,
      image_url varchar,
      user_id integer REFERENCES users (user_id)
    );
  `;

  await pool.query(createDiscTable).catch((err) => {
    console.error(err);
  });

  const populateDiscTable = `
    INSERT INTO discs (title, brand, type, mold, base_plastic, sub_plastic, run, condition, price, image_url, user_id)
      VALUES ${discs.map(
        (disc) =>
          `('${disc.title}', 
          '${disc.brand}', 
          '${disc.type}', 
          '${disc.mold}', 
          '${disc.basePlastic}', 
          '${disc.subPlastic || ''}', 
          '${disc.run || ''}', 
          ${disc.condition}, 
          ${disc.price}, 
          '${disc.image}', 
          ${getRandNum(1, 2)})`
      )};
  `;

  await pool.query(populateDiscTable).catch((err) => {
    console.error(err);
    res.end();
  });

  res.send('you are so populated');
};

export default setupDevDb;
